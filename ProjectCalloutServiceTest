@isTest
private class ProjectCalloutServiceTest {
    
    @TestSetup
    public static void testingData(){
        //service token setup
        ServiceTokens__c sToken = new ServiceTokens__c();
        sToken.Name = 'ProjectServiceToken';
        sToken.Token__c = 'carcatdog';
        insert sToken;
        
        //opportunity n.1
        Opportunity oppty1 = new Opportunity();
        oppty1.Name = 'Test1';
        oppty1.Type = 'New Project';
        oppty1.Amount = 100;
        oppty1.CloseDate = Date.today();
        oppty1.StageName = 'Submitted Project';
        insert oppty1;
        
        //opportunity n.2
        Opportunity oppty2 = new Opportunity();
        oppty2.Name = 'Test2';
        oppty2.Type = 'New Project';
        oppty2.Amount = 100;
        oppty2.CloseDate = Date.today();
        oppty2.StageName = 'Resubmit Project';
        insert oppty2;
    }
    
    @IsTest
    public static void testOK(){
        Opportunity oppty = [SELECT Id,Name FROM Opportunity WHERE Name = 'test1'];
        List<Id> opptyList = new List<Id>();
        opptyList.add(oppty.Id);
        Test.setMock(HttpCalloutMock.class, new ProjectCalloutServiceMock());
        Test.startTest();
        ProjectCalloutService.postOpportunityToPMS(opptyList);
        Test.stopTest();
        
        List<Opportunity> updateOpptys = [SELECT Id,Name,StageName FROM Opportunity WHERE Name = 'test1'];
        System.assertEquals('Submitted Project', updateOpptys[0].StageName);
    }
    
        @IsTest
    public static void testFailure(){
        Opportunity oppty = [SELECT Id,Name FROM Opportunity WHERE Name = 'test2'];
        List<Id> opptyList = new List<Id>();
        opptyList.add(oppty.Id);
        Test.setMock(HttpCalloutMock.class, new ProjectCalloutServiceMock());
        Test.startTest();
        ProjectCalloutService.postOpportunityToPMS(opptyList);
        Test.stopTest();
        
        List<Opportunity> updateOpptys = [SELECT Id,Name,StageName FROM Opportunity WHERE Name = 'test2'];
        System.assertEquals('Resubmit Project', updateOpptys[0].StageName);
    }
}
